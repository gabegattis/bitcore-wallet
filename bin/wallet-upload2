#!/usr/bin/env node
'use strict';

var async = require('async');
var request = require('request');

var filePath = process.argv[2];
var skip = parseInt(process.argv[3]);
var walletJSON = require(filePath);

var DEFAULT_URL = 'http://127.0.0.1:3001';
var ADDRESS_LIMIT = 1000;

var walletId = walletJSON.walletId;
var keys = walletJSON.keys;
if (!isNaN(skip)) {
  keys = keys.slice(skip);
}

var count = 0;

function uploadChunk(callback) {
  console.log('uploading addresses', count, '/', keys.length);
  var chunk = keys.slice(count, count + ADDRESS_LIMIT).map(function(key) {
    return key.address;
  });
  count += ADDRESS_LIMIT;
  uploadAddresses(chunk, callback);
}

function uploadAddresses(addresses, callback) {
  var options = {
    url: DEFAULT_URL + '/wallet-api/wallets/' + walletId + '/addresses',
    json: {
      addresses: addresses
    }
  };

  request.post(options, function(err, res, body) {
    if (err) {
      return callback(err);
    }

    callback();
  });
}

var times = keys.length / ADDRESS_LIMIT;
var remainder = keys.length % ADDRESS_LIMIT;
if (remainder > 0) {
  times += 1;
}
async.timesLimit(times, 1, function(n, callback) {
  uploadChunk(callback);
}, function(err) {
  if (err) {
    console.log(err);
  }

  //
});
